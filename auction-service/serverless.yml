service: sls-auction-app
frameworkVersion: '3'

plugins:
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs16.x
  memorySize: 512
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
  iamRoleStatements:
    - ${file(serverless/iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(serverless/iam/MailQueueIAM.yml):MailQueueIAM}

resources:
  Resources:
    AuctionsTable:
      ${file(serverless/resources/AuctionsTable.yml):AuctionsTable}
     
functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events: 
      - http:
          path: /auctions
          method: POST
          cors: true
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events: 
      - http:
          path: /auctions
          method: GET
          cors: true
          authorizer: ${self:custom.authorizer}

  getAuction:
    handler: src/handlers/getAuction.handler
    events: 
      - http:
          path: /auctions/{id}
          method: GET
          cors: true
          authorizer: ${self:custom.authorizer}

  placeBid:
    handler: src/handlers/placeBid.handler
    events: 
      - http:
          path: /auctions/{id}
          method: PATCH
          cors: true
          authorizer: ${self:custom.authorizer}

  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events: 
    #   - schedule: rate(1 minute)

custom:
  authorizer: arn:aws:lambda:${self:provider.region}:338975015168:function:auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn:  !GetAtt AuctionsTable.Arn
  MailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  bundle:
    linting: false
  
